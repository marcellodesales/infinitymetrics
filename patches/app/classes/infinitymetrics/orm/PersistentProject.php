<?php

require 'infinitymetrics/orm/om/PersistentBaseProject.php';


/**
 * Skeleton subclass for representing a row from the 'project' table.
 *
 * 
 *
 * This class was autogenerated by Propel 1.3.0 on:
 *
 * 11/30/08 13:11:21
 *
 * You should add additional methods to this class to meet the
 * application requirements.  This class will only be generated as
 * long as it does not already exist in the output directory.
 *
 * @package    infinitymetrics/orm
 */
class PersistentProject extends PersistentBaseProject {

	/**
	 * Initializes internal state of PersistentProject object.
	 * @see        parent::__construct()
	 */
	public function __construct()
	{
		// Make sure that parent constructor is always invoked, since that
		// is where any default values for this object are set.
		parent::__construct();
	}

    public function getTotalEventsByCategory() {
        $categories = array (   'COMMIT',
                                'DOCUMENTATION',
                                'FORUM',
                                'ISSUE',
                                'MAILING_LIST' );

        $totalEvents = array();
        $criteria = new Criteria();

        foreach ($categories as $category)
        {
            $totalEvents[$category]= 0;
            $criteria->clear();
            $criteria->add(PersistentChannelPeer::CATEGORY, $category);
            $criteria->addAnd(PersistentChannelPeer::PROJECT_JN_NAME, $this->getProjectJnName());
            $channels = PersistentChannelPeer::doSelect($criteria);

            foreach($channels as $channel) {
                $totalEvents[$category] += count($channel->getEvents());
            }
        }

        $criteria->clear();
        $criteria->add(PersistentCustomEventPeer::PROJECT_JN_NAME, $this->project_jn_name);
        $totalEvents['CUSTOM_EVENT'] = PersistentCustomEventPeer::doCount($criteria);

        return $totalEvents;
    }

} // PersistentProject
