5. COMPETITIVE ANALYSIS

Despite its potential wide-ranging applications, research on the automation of collecting participation metrics of Java.net projects has yielded little significant result by the community at large. In fact, GlassFish, one of the largest and most widely used projects on Java.net[1] has no automated participation metrics system[2]. While StatsWidgets provides the limited functionality of outputting delimited text files of a given RSS feed (or a set of them), this implementation provides little usability for the intended audience of our system because it would require them to set up, configure and maintain a database to handle the output files generated by StatsWidgets. Since the requirements explicitly states that users should have no such prior knowledge of database systems, StatsWidgets proves inadequate in this light. In addition, not all metrics generated by a project are trackable using RSS, and so the need for a tool that will collect metrics on these non-RSS participation is essential. We aim to automate not only the retrieval of the RSS feeds, but the storage in a database that will enable presentation in meaningful and analytical ways to the user.

Notwithstanding StatsWidgets' differing intended audience, the similarity of its core functionality makes it a competitor to our system. 


[1] http://community.java.net/projects/top.csp
[2] http://wiki.glassfish.java.net/Wiki.jsp?page=CommunityStatistics
