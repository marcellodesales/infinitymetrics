Introduction



Software engineering is one of the fastest growing field in industrial America today.  As such, software engineering education has made drastic accomodations in order to provide students with the necessary skills to compete in a competitive world.  More and more companies and designing software in a virtual environment and educational institutions have restructured their programs to reflect this change.  It has become an obvious necessity encourage team software development in a virtual environment.  As such, it has become incredibly important for instructors to have the proper tools to thoroughly examine team development and individual student participation of team class projects in a web-based medium.  Instructors need to be able to monitor progress in virtual environments as easily as progress through the traditional hard copy submissions.  InfinityNet is designed to provide such tools to instructors of group projects under the java.net platform.

InfiniftyNet is an efficient, automatic, and user-friendly web application that records and reports on software development participation in distributed or local virtual class settings.  This web application includes a web crawler which allows an instructor to automatically collect participation data for a set of Java.net projects.  Instructors will be able to set up their individual virtual environments, add their student projects, monitor java.net submissions from these student projects, and view reports of the information gathered in an organized way.  

//As software development becomes more and more advanced and higher level languages are used, it becomes harder to //examine the development process.  The web crawler technology used in InfinityNet requires very little data entry //and offers metric data immediately upon use.  This allows a large amount of information to be available to the //instructor with little to no effort exerted.  The purpose of InfinityNet is to simplify and display the data //accumulation of participation metrics for use in a class setting.  
//I think this whole section shouldn't be used

//this seems to detailed for an intro...could just be me tho
The web crawler implementation we use is the most important feature of our software.  We call it InfinityAgent and it accesses and catalogues RSS Feeds among other participation metrics as a representative of a unique Java.net account.  InfinityAgent then loads the data gathered from the RSS Feeds into a database from which the professor can extract meaningful reports in tabular or graphical view.  The instructors are also free to decide which metrics to gather if they do not want to collect everything.  This gives instructors the capacity to view and manipulate the data in their own way without having to parse the RSS Feeds themselves.  This makes it possible for instructors to gain an in-depth understanding of class participation metrics in a straight-forwardand efficient way.



REMOVE: By real estate example:

What is the market?
What can we achieve in this market?
Importance of achieving this market.


What is our project?
What is special about it?
Why is this sure to work?  (Tools)


How are we catching the changing market?
Ease of use for super-users.
Ease of use for sub-users.
What is the main goal of our software?


Important (new) features?  Labeled?
Explain (new) features.
How is this (new) feature great and superior?
How does this (new) feature allow achieving the market?





Executive Summary of the project, explaining why we should get funded, our solution represents a better alternative to the existing ones (if any).