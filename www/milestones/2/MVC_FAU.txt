5.1. Model

The model is composed four main components, implemented as PHP classes: Users, Metrics Workspace, Participation Metrics and Dispute Tracker. Users are subdivided into Instructor and Student users. They contain the user's information, including their java.net username & password, their real name, email address (and in the case of Students, the Student ID). Users are members of an Institution, which is in itself a class containing the Institution's name, abbreviation, city, province and country. Instructors can create Metrics Workspaces, which include a title and description as well as a state (e.g. 'Active', 'Paused', 'Inactive'). Workspaces contain java.net Projects, composed of a parent and children projects. The Workspace can be shared with other Instructors. The list of Event Categories available in each of the children projects is collected from java.net and allows the system to validate proyect ownership for Instructor registration and team leaders. These Event Categories, in turn, populate the list of RSS feeds that the Instructor's Personal Agent will visit in order to collect Participation Metrics. In addition, the instructor may add Disputes, which in turn contain Entries that will allow him/her to track individual events within a team pertaining to a Dispute.


5.2. View

The presentation of model is based on the Participation Metrics collected by the Personal Agent, which can be viewed through the Reports in several PHP pages in either graphical or tabular presentation. These views include Participation Metrics by group (viewProjectMetrics), by student (viewStudentMetrics), by Event Category (viewWorkspaceMetrics) and by top performing project, or exported (exportMetrics). Views are also provided for user accounts (studentProfile and projectOwnerProfile). In addition, a View is provided for the set of Workpspaces that have been created and/or shared with an Instructor (viewWorkspace). Lastly, views are also available for the Dispute Tracker on which the Instructor can track entries related to a given Dispute (viewDisputes).


5.3. Controller

The UserController implements the functionality for the Users component. It allows users to register ( registerInstructor() and registerStudent() ), login ( login() ), modify their java.net credentials and email address ( updateInstructor() and updateStudent() via retrieveUser() ). 

Instructors manage their Workspaces through the MetricsWorkspacesController, wehere they can create Workspaces ( createWrokspace() ), view their collection of Workpsaces ( retrieveWorkspaceCollection() ), update the Workspace configuration, change the state of Workspaces ( changeWorkspaceState() ) or its configuration ( updateWorkspaceProfile() ) as well as share them with other Instructors ( shareWorkspace() ).

Instructors can also modify the Dispute Tracker by changing its title, date, and state ( updateDispute() ), and adding or removing entries ( addEntryToDispute() and removeEntryFromDispute() ).

The Instructor's Personal Agent provides the PersonalAgenController, which allows users to authenticate their credentials against java.net ( authenticateJavanetUser() ), collect the children projects of a parent java.net project ( collectChildrenProjects() ), retrieve the list of available event categories for a given project ( retrieveProjectEventsList() ), and retrieve the actual participation metrics from the list of RSS feeds available for the project ( retrieveRSSData() ). 

The views are managed through the ReportsController, which provides functionality to retrieve a report by project ( retrieveProjectReport() ), by student ( retrieveStudentReport() ), by Workspace (retrieveWorkspaceReport() ), or the by the top performing projects by specifying the number of projects to retrieve ( retrieceTopProjects(int) ).